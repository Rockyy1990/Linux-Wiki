
#
# FFMPEG Converter
#

USAGE: 
# ffmpeg [Global_OPTIONS] [SOURCE OPTIONS] -i SOURCEFILE [TARGETFILE OPTIONS] TARGETFILE 

# Best crf and Average bitrate:
# -crf 18 - 23
# -vb 1800k - 2300k  # Good quality
# -vb 2400k - 3800k  # High quality


## FFMPEG Options and tweaks

# Metadata from source file to targetfile
ffmpeg -i <sourcefile> -map_metadata 0 -movflags use_metadata_tags

# video scale (from 4k to fhd etc)
ffmpeg -i input.mp4 -vf "scale=1920x1080" output.mp4

# Preset superfast is like realtime. You should use that instead of -preset ultrafast. 
# Ultrafast is far less efficient compression than superfast.
-preset superfast

# Preset medium and slow (better compression efficiency and improved quality at the expense of encoding time)
-preset medium , -preset slow 

# Using video denoise
-vf "hqdn3d"

# Optimizes settings for animated content to maintain color fidelity and detail.
-tune animation

# Using AV1 Video codec insteed of x264 or 265
ffmpeg -i 20230722_135205.mp4 -c:v libsvtav1 -b:v 2000k -c:a aac -b:a 224k -strict experimental output.mkv



::264
# Better quality with x264 (but a little bit slower encoding speed)
-x264opts fast_pskip=0 , -profile:v high , -level 4.1

# Enables adaptive quantization for better-quality detail retention.
# Sets the maximum number of B-frames between I/P-frames to improve compression efficiency.
-x264-params "aq-mode=1:bframes=16"


::265
# Better quality for x265 (Increase rate-distortion optimization for better quality at the same bitrate.)
--rd 4

# Sets the maximum interval between I-frames to improve compression.
--keyint 240

# (x265 only) Optimizes encoding for sources with grain for better quality retention.
-tune grain



# AAC Variable Bitrate (VBR) (4 and 5 for best quality)
-acodec aac -vbr 5

# No Chapters
-map_chapters -1

# A/V Synchro (Automatic)
-sync -1


# Prevents ffmpeg from outputting its copyright notice, build options and library versions
-hide_banner

# Modulates verbosity (fine-tuning options are available), e.g. -loglevel warning
-loglevel 

# Disables printing of encoding progress/statistics
-nostats

# Only pv output (No warnings etc)
-v quiet




- Convert Video

:: x264

# Convert to x264 vb and aac 224k 2.0 medium preset
ffmpeg -i D:\Sourcefile -vcodec libx264 -vb 2400k -tune film -tune fastdecode -preset medium -acodec aac -ab 224k -ac 2 D:\Output.mp4

# Convert to x264 crf and aac 224k 2.0 medium preset
ffmpeg -i D:\Sourcefile -vcodec libx264 -crf 20 -tune film -tune fastdecode -preset medium -acodec aac -ab 224k -ac 2 D:\Output.mp4

# Convert to x264 vb and 224k 2.0 medium preset and high profile lvl 4
ffmpeg -i D:\Sourcefile -vcodec libx264 -vb 2400k -vprofile high -level 40 -s 1920x1080 -tune film -tune fastdecode -preset medium -acodec aac -ab 224k -ac 2 -y D:\Output.mp4 

# Convert to x264 crf 23 preset medium with decomb fast
ffmpeg -i input.mp4 -vf "decomb=mode=fast" -c:v libx264 -crf 23 -preset medium -c:a copy output.mp4


:: x265

# Convert to x265 aac 224k
ffmpeg -i D:\input -c:v libx265 -crf 22 -tune film -tune fastdecode -preset medium -c:a aac -b:a 224k -ac 2 D:\output.mp4

# Convert to x265 vb and aac 224k 2.0 medium preset
ffmpeg -i D:\input -c:v libx265 -vb 2400k -tune film -tune fastdecode -preset medium -c:a aac -b:a 224k -ac 2 D:\output.mp4

# Convert webm to x265
ffmpeg -i input.webm -c:v libx265 -b:v 2200k -preset medium -c:a aac -b:a 224k output.mp4


:: AVI

# Convert MP4 into an AVI File (Same quality)
ffmpeg -i filename.mp4 -vcodec copy -acodec copy filename.avi

# Convert MKV into AVI High Quality
ffmpeg -i input.mkv -codec:v libx264 -preset slow -crf 18 -codec:a copy output.avi




- Convert into Audio

# into aac 256k
ffmpeg -i input.wav -c:a aac -b:a 256k output.aac

# recoding
ffmpeg -i input-video.mp4 -acodec copy output.mp3

# Convert into mp3 with using presets (high and extreme for best quality)
ffmpeg -i input.wav lame --preset extreme  output.mp3

# simple command to extract audio from a video file
ffmpeg -i input-video.mp4 output-audio.mp3


# Convert into Flac (level 5 is recommended value)
ffmpeg -i input.wav -compression_level 5 output.flac

# Convert into Opus
ffmpeg -i input.wav opusenc --bitrate 192 output.opus

# Convert into OGG Vorbis (with quality settings)
ffmpeg -i input.wav oggenc -q5 output.ogg



