Die Bash-Kommandos mkdir, rmdir und rm sind grundlegende Werkzeuge für die Verwaltung von Verzeichnissen und Dateien in einem Unix- oder Linux-Betriebssystem. Hier sind die Beschreibungen und einige nützliche Beispiele für jedes dieser Kommandos:
1. mkdir

Das Kommando mkdir (make directory) wird verwendet, um ein neues Verzeichnis zu erstellen.

Syntax:

 mkdir [Optionen] Verzeichnisname

Beispiele:

    Ein einfaches Verzeichnis erstellen:

     mkdir meineOrdner

    Mehrere Verzeichnisse auf einmal erstellen:

     
    mkdir ordner1 ordner2 ordner3

    Verzeichnisse mit verschachtelten Strukturen erstellen:

     mkdir -p /pfad/zum/elternordner/kind1/kind2

    Hierbei erstellt die Option -p das gesamte Verzeichnis, auch wenn Teile davon noch nicht existieren.

2. rmdir

Das Kommando rmdir (remove directory) wird verwendet, um ein leeres Verzeichnis zu löschen. Es kann nur dann verwendet werden, wenn das Verzeichnis keine Dateien oder Unterverzeichnisse enthält.

Syntax:

 rmdir [Optionen] Verzeichnisname

Beispiele:

    Ein leeres Verzeichnis löschen:

     rmdir meineOrdner

    Mehrere leere Verzeichnisse auf einmal löschen:

      rmdir ordner1 ordner2

    Option verwenden, um eine Fehlermeldung zu unterdrücken:

     
    rmdir -p elternordner/kind1/kind2

    Mit der Option -p wird auch das übergeordnete Verzeichnis gelöscht, wenn es leer ist.

3. rm

Das Kommando rm (remove) wird verwendet, um Dateien und Verzeichnisse zu löschen. Es ist sehr mächtig und sollte mit Vorsicht verwendet werden.

Syntax:

 
rm [Optionen] Dateiname

Beispiele:

    Eine Datei löschen:

      rm meineDatei.txt

    Mehrere Dateien auf einmal löschen:

     
    rm datei1.txt datei2.txt datei3.txt

    Ein Verzeichnis und dessen Inhalt löschen (rekursiv):

     rm -r meinVerzeichnis

    Hierbei löscht die Option -r (rekursiv) das Verzeichnis meinVerzeichnis sowie alle darin enthaltenen Dateien und Unterverzeichnisse.

    Eine Datei mit Bestätigung vor dem Löschen entfernen:

     rm -i meineDatei.txt

    Mit der Option -i werden Sie vor dem Löschen um Bestätigung gebeten.

    Alle Dateien eines bestimmten Typs (z.B. .txt) in einem Verzeichnis löschen:

      rm *.txt

    Dies löscht alle .txt-Dateien im aktuellen Verzeichnis.

Vorsicht bei der Verwendung von rm

Es ist wichtig, beim Einsatz des rm-Befehls vorsichtig zu sein, insbesondere mit der Option -r. Ein falscher Befehl kann dazu führen, dass wichtige Daten verloren gehen. Für zusätzliche Sicherheit können Sie rm -i verwenden, um eine Bestätigungsaufforderung zu erhalten, bevor jede Datei gelöscht wird.

Mit diesen Kommandos können Sie effektiv mit Verzeichnissen und Dateien in der Bash arbeiten!