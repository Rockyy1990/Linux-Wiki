`grep` ist ein leistungsstarkes Kommandozeilenwerkzeug in Unix-ähnlichen Betriebssystemen, das verwendet wird, um Text nach bestimmten Mustern zu durchsuchen. 
Es steht für "global regular expression print".

Hier sind drei Beispiele, wie `grep` verwendet werden kann:

### Beispiel 1: Einfache Textsuche
Angenommen, wir haben eine Datei namens `beispiel.txt`, die die folgenden Zeilen enthält:

```
Hallo Welt
Das ist ein Beispiel.
Grep ist nützlich.
Hallo noch einmal.
```

Um alle Zeilen anzuzeigen, die das Wort "Hallo" enthalten, verwenden wir den folgenden Befehl:

```bash
grep "Hallo" beispiel.txt
```

**Ausgabe:**
```
Hallo Welt
Hallo noch einmal.
```

### Beispiel 2: Groß- und Kleinschreibung ignorieren
Wenn wir beim Suchen nach dem Wort "grep" die Groß- und Kleinschreibung ignorieren möchten, können wir die Option `-i` verwenden. Angenommen, wir haben die gleiche Datei `beispiel.txt`, und wir suchen nach "GREP":

```bash
grep -i "grep" beispiel.txt
```

**Angenommene Ausgabe:**
```
Grep ist nützlich.
```

### Beispiel 3: Zeilennummern anzeigen
Um beim Durchsuchen einer Datei die Zeilennummern der gefundenen Übereinstimmungen anzuzeigen, können wir die Option `-n` verwenden. Hier ist ein Beispiel, bei dem wir nach dem Wort "ein" in der gleichen Datei suchen:

```bash
grep -n "ein" beispiel.txt
```

**Ausgabe:**
```
2:Das ist ein Beispiel.
```

In diesem Beispiel zeigt `grep` die Zeile (2), in der das Wort "ein" gefunden wurde, zusammen mit der Übereinstimmung in der Ausgabe.

Diese Beispiele zeigen nur einen kleinen Teil der Funktionen von `grep`. Das Tool unterstützt auch reguläre Ausdrücke, die es ermöglichen, komplexere Suchmuster zu definieren und zusätzliche Optionen zur Anpassung der Suche anzuwenden.